{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from \"immer\";\nexport const initialState = {\n  logInLoading: false,\n  // 로그인 시도중인지 확인하는 변수\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중인지 확인하는 변수\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입중인지 확인하는 변수\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중인지 확인하는 변수\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n}; // --- 상수화\n\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\"; // user reducer의 상태를 바꿀 수 있는 액션\n\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\"; // ---\n\nconst dummyUser = data => {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: \"hyoil\",\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: \"aaa\"\n    }, {\n      nickname: \"bbb\"\n    }, {\n      nickname: \"ccc\"\n    }],\n    Followers: [{\n      nickname: \"aaa\"\n    }, {\n      nickname: \"bbb\"\n    }, {\n      nickname: \"ccc\"\n    }]\n  });\n};\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        // 리듀서의 액션이 실행되면서 saga의 액션도 같이 실행이됨 동시에\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n      // return {\n      //   // request에서 3개의 변수를 모두 초기화 시켜줌\n      //   ...state,\n      //   logInLoading: true,\n      //   logInDone: false,\n      //   logInError: null,\n      // };\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n      // return {\n      //   // success에서 필요한 변수만 초기화 시켜줌\n      //   ...state,\n      //   logInLoading: false,\n      //   logInDone: true,\n      //   me: dummyUser(action.data),\n      // };\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n      // return {\n      //   // failure에서 필요한 변수만 초기화 시켜줌\n      //   ...state,\n      //   logInLoading: false,\n      //   logInError: action.error,\n      // };\n\n      case LOG_OUT_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logOutLoading: true,\n          logOutDone: false,\n          logOutError: null\n        });\n\n      case LOG_OUT_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logOutLoading: false,\n          logOutDone: true,\n          logInDone: false,\n          me: null\n        });\n\n      case LOG_OUT_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logOutLoading: false,\n          logOutError: action.error\n        });\n\n      case SIGN_UP_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpLoading: true,\n          signUpDone: false,\n          signUpError: null\n        });\n\n      case SIGN_UP_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpLoading: false,\n          signUpDone: true\n        });\n\n      case SIGN_UP_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpLoading: false,\n          signUpError: action.error\n        });\n\n      case CHANGE_NICKNAME_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: true,\n          changeNicknameDone: false,\n          changeNicknameError: null\n        });\n\n      case CHANGE_NICKNAME_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: false,\n          changeNicknameDone: true\n        });\n\n      case CHANGE_NICKNAME_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: false,\n          changeNicknameError: action.error\n        });\n\n      case ADD_POST_TO_ME:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          me: _objectSpread(_objectSpread({}, state.me), {}, {\n            Posts: [{\n              id: action.data\n            }, ...state.me.Posts]\n          })\n        });\n\n      case REMOVE_POST_OF_ME:\n        // const postIndex = state.me.Posts.findIndex((v) => v.id === action.data);\n        // const posts = [...state.me.Posts];\n        // posts.splice(postIndex, 1);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          me: _objectSpread(_objectSpread({}, state.me), {}, {\n            Posts: state.me.Posts.filter(v => v.id !== action.data)\n          })\n        });\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/dlgyd/OneDrive/문서/GitHub/re.nodebird/front/reducers/user.js"],"names":["produce","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","draft","error","filter","v"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  logInLoading: false, // 로그인 시도중인지 확인하는 변수\r\n  logInDone: false,\r\n  logInError: null,\r\n\r\n  logOutLoading: false, // 로그아웃 시도중인지 확인하는 변수\r\n  logOutDone: false,\r\n  logOutError: null,\r\n\r\n  signUpLoading: false, // 회원가입중인지 확인하는 변수\r\n  signUpDone: false,\r\n  signUpError: null,\r\n\r\n  changeNicknameLoading: false, // 닉네임 변경 시도중인지 확인하는 변수\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\n// --- 상수화\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\r\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\r\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\r\n\r\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\r\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\r\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\r\n\r\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\r\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\r\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\r\n\r\n// user reducer의 상태를 바꿀 수 있는 액션\r\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\r\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\r\n// ---\r\n\r\nconst dummyUser = (data) => {\r\n  return {\r\n    ...data,\r\n    nickname: \"hyoil\",\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ nickname: \"aaa\" }, { nickname: \"bbb\" }, { nickname: \"ccc\" }],\r\n    Followers: [{ nickname: \"aaa\" }, { nickname: \"bbb\" }, { nickname: \"ccc\" }],\r\n  };\r\n};\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOG_IN_REQUEST: // 리듀서의 액션이 실행되면서 saga의 액션도 같이 실행이됨 동시에\r\n        draft.logInLoading = true;\r\n        draft.logInDone = false;\r\n        draft.logInError = null;\r\n        break;\r\n      // return {\r\n      //   // request에서 3개의 변수를 모두 초기화 시켜줌\r\n      //   ...state,\r\n      //   logInLoading: true,\r\n      //   logInDone: false,\r\n      //   logInError: null,\r\n      // };\r\n      case LOG_IN_SUCCESS:\r\n        draft.logInLoading = false;\r\n        draft.logInDone = true;\r\n        draft.me = dummyUser(action.data);\r\n        break;\r\n      // return {\r\n      //   // success에서 필요한 변수만 초기화 시켜줌\r\n      //   ...state,\r\n      //   logInLoading: false,\r\n      //   logInDone: true,\r\n      //   me: dummyUser(action.data),\r\n      // };\r\n      case LOG_IN_FAILURE:\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n      // return {\r\n      //   // failure에서 필요한 변수만 초기화 시켜줌\r\n      //   ...state,\r\n      //   logInLoading: false,\r\n      //   logInError: action.error,\r\n      // };\r\n\r\n      case LOG_OUT_REQUEST:\r\n        return {\r\n          ...state,\r\n          logOutLoading: true,\r\n          logOutDone: false,\r\n          logOutError: null,\r\n        };\r\n      case LOG_OUT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          logOutLoading: false,\r\n          logOutDone: true,\r\n          logInDone: false,\r\n          me: null,\r\n        };\r\n      case LOG_OUT_FAILURE:\r\n        return {\r\n          ...state,\r\n          logOutLoading: false,\r\n          logOutError: action.error,\r\n        };\r\n\r\n      case SIGN_UP_REQUEST:\r\n        return {\r\n          ...state,\r\n          signUpLoading: true,\r\n          signUpDone: false,\r\n          signUpError: null,\r\n        };\r\n      case SIGN_UP_SUCCESS:\r\n        return {\r\n          ...state,\r\n          signUpLoading: false,\r\n          signUpDone: true,\r\n        };\r\n      case SIGN_UP_FAILURE:\r\n        return {\r\n          ...state,\r\n          signUpLoading: false,\r\n          signUpError: action.error,\r\n        };\r\n\r\n      case CHANGE_NICKNAME_REQUEST:\r\n        return {\r\n          ...state,\r\n          changeNicknameLoading: true,\r\n          changeNicknameDone: false,\r\n          changeNicknameError: null,\r\n        };\r\n      case CHANGE_NICKNAME_SUCCESS:\r\n        return {\r\n          ...state,\r\n          changeNicknameLoading: false,\r\n          changeNicknameDone: true,\r\n        };\r\n      case CHANGE_NICKNAME_FAILURE:\r\n        return {\r\n          ...state,\r\n          changeNicknameLoading: false,\r\n          changeNicknameError: action.error,\r\n        };\r\n\r\n      case ADD_POST_TO_ME:\r\n        return {\r\n          ...state,\r\n          me: {\r\n            ...state.me,\r\n            Posts: [{ id: action.data }, ...state.me.Posts],\r\n          },\r\n        };\r\n\r\n      case REMOVE_POST_OF_ME:\r\n        // const postIndex = state.me.Posts.findIndex((v) => v.id === action.data);\r\n        // const posts = [...state.me.Posts];\r\n        // posts.splice(postIndex, 1);\r\n        return {\r\n          ...state,\r\n          me: {\r\n            ...state.me,\r\n            Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n          },\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}