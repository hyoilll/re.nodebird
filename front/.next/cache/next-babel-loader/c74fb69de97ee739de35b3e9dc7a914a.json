{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlgyd\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\re.nodebird\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Card, Popover, Avatar, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, EllipsisOutlined, MessageOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nimport React, { useCallback, useState } from \"react\";\nimport Item from \"antd/lib/list/Item\";\nimport CommentForm from \"./CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormopened = _useState2[1];\n\n  var onToggleComment = useCallback(function () {\n    setCommentFormopened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var id = me && me.id; // me가 있으면 id가 들어가고 없으면 undefined가 저장됨\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        cover: post && post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 31\n        }, _this),\n        actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n          twoToneColor: \"#eb2f96\",\n          onClick: onToggleLike\n        }, \"heart\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n          onClick: onToggleLike\n        }, \"heart\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n          onClick: onToggleComment\n        }, \"comment\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n          content: /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                children: \"\\uC218\\uC815\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"danger\",\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 23\n              }, _this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC2E0\\uACE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, _this),\n          children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, _this)\n        }, \"more\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, _this)],\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: post.User.nickname[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, _this),\n          title: post.User.nickname,\n          description: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(List, {\n          header: \"\".concat(post.Comments.lengths, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n          itemLayout: \"horizontal\",\n          dataSource: post.Comments,\n          renderItem: function renderItem(item) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Comment, {\n                author: item.User.nickname,\n                avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: Item.User.nickname[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 31\n                }, _this),\n                content: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(PostCard, \"zxNaB93r44CaRwPpM83scSIQyTk=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/dlgyd/OneDrive/문서/GitHub/re.nodebird/front/components/PostCard.js"],"names":["Button","Card","Popover","Avatar","List","Comment","RetweetOutlined","HeartOutlined","EllipsisOutlined","MessageOutlined","HeartTwoTone","useSelector","PropTypes","PostImages","React","useCallback","useState","Item","CommentForm","PostCard","post","liked","setLiked","onToggleLike","prev","commentFormOpened","setCommentFormopened","onToggleComment","me","state","user","id","marginBottom","Images","User","nickname","content","Comments","lengths","item","propTypes","shape","number","object","string","createAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { Button, Card, Popover, Avatar, List, Comment } from \"antd\";\r\nimport {\r\n  RetweetOutlined,\r\n  HeartOutlined,\r\n  EllipsisOutlined,\r\n  MessageOutlined,\r\n  HeartTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport PostImages from \"./PostImages\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Item from \"antd/lib/list/Item\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n\r\n  const [commentFormOpened, setCommentFormopened] = useState(false);\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormopened((prev) => !prev);\r\n  }, []);\r\n\r\n  const me = useSelector((state) => state.user.me);\r\n  const id = me && me.id; // me가 있으면 id가 들어가고 없으면 undefined가 저장됨\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: 20 }}>\r\n        <Card\r\n          cover={\r\n            post &&\r\n            post.Images[0] && <PostImages images={post.Images}></PostImages>\r\n          }\r\n          actions={[\r\n            <RetweetOutlined key=\"retweet\"></RetweetOutlined>,\r\n            liked ? (\r\n              <HeartTwoTone\r\n                twoToneColor=\"#eb2f96\"\r\n                key=\"heart\"\r\n                onClick={onToggleLike}\r\n              ></HeartTwoTone>\r\n            ) : (\r\n              <HeartOutlined key=\"heart\" onClick={onToggleLike}></HeartOutlined>\r\n            ),\r\n            <MessageOutlined\r\n              key=\"comment\"\r\n              onClick={onToggleComment}\r\n            ></MessageOutlined>,\r\n            <Popover\r\n              key=\"more\"\r\n              content={\r\n                <Button.Group>\r\n                  {id && post.User.id === id ? (\r\n                    <>\r\n                      <Button>수정</Button>\r\n                      <Button type=\"danger\">삭제</Button>\r\n                    </>\r\n                  ) : (\r\n                    <Button>신고</Button>\r\n                  )}\r\n                </Button.Group>\r\n              }\r\n            >\r\n              <EllipsisOutlined></EllipsisOutlined>\r\n            </Popover>,\r\n          ]}\r\n        >\r\n          <Card.Meta\r\n            avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n            title={post.User.nickname}\r\n            description={post.content}\r\n          ></Card.Meta>\r\n        </Card>\r\n        {commentFormOpened && (\r\n          <div>\r\n            <CommentForm post={post}></CommentForm>\r\n            <List\r\n              header={`${post.Comments.lengths}개의 댓글`}\r\n              itemLayout=\"horizontal\"\r\n              dataSource={post.Comments}\r\n              renderItem={(item) => {\r\n                return (\r\n                  <li>\r\n                    <Comment\r\n                      author={item.User.nickname}\r\n                      avatar={<Avatar>{Item.User.nickname[0]}</Avatar>}\r\n                      content={item.content}\r\n                    ></Comment>\r\n                  </li>\r\n                );\r\n              }}\r\n            ></List>\r\n          </div>\r\n        )}\r\n        {/* <CommentForm></CommentForm>\r\n        <Comments></Comments> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}