{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlgyd\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\re.nodebird\\\\front\\\\components\\\\PostCard.js\";\nimport { Button, Card, Popover, Avatar, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, EllipsisOutlined, MessageOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nimport React, { useCallback, useState } from \"react\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormopened\n  } = useState(false);\n  const onToggleComment = useCallback(() => {\n    setCommentFormopened(prev => !prev);\n  }, []);\n  const dispatch = useDispatch();\n  const deletePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  });\n  const me = useSelector(state => state.user.me);\n  const id = me && me.id; // me가 있으면 id가 들어가고 없으면 undefined가 저장됨\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        cover: post && post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 31\n        }, this),\n        actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n          twoToneColor: \"#eb2f96\",\n          onClick: onToggleLike\n        }, \"heart\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n          onClick: onToggleLike\n        }, \"heart\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n          onClick: onToggleComment\n        }, \"comment\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          content: /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                children: \"\\uC218\\uC815\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"danger\",\n                onClick: deletePost,\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC2E0\\uACE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, \"more\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)],\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: post.User.nickname[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this),\n          title: post.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            postData: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          header: `${post.Comments.length}개의 댓글`,\n          itemLayout: \"horizontal\",\n          dataSource: post.Comments,\n          renderItem: item => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Comment, {\n                author: item.User.nickname,\n                avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: item.User.nickname[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 31\n                }, this),\n                content: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/dlgyd/OneDrive/문서/GitHub/re.nodebird/front/components/PostCard.js"],"names":["Button","Card","Popover","Avatar","List","Comment","RetweetOutlined","HeartOutlined","EllipsisOutlined","MessageOutlined","HeartTwoTone","useDispatch","useSelector","PropTypes","PostImages","React","useCallback","useState","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","liked","setLiked","onToggleLike","prev","commentFormOpened","setCommentFormopened","onToggleComment","dispatch","deletePost","type","data","id","me","state","user","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { Button, Card, Popover, Avatar, List, Comment } from \"antd\";\r\nimport {\r\n  RetweetOutlined,\r\n  HeartOutlined,\r\n  EllipsisOutlined,\r\n  MessageOutlined,\r\n  HeartTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport PostImages from \"./PostImages\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n\r\n  const [commentFormOpened, setCommentFormopened] = useState(false);\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormopened((prev) => !prev);\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  const deletePost = useCallback(() => {\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  });\r\n\r\n  const me = useSelector((state) => state.user.me);\r\n  const id = me && me.id; // me가 있으면 id가 들어가고 없으면 undefined가 저장됨\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: 20 }}>\r\n        <Card\r\n          cover={\r\n            post &&\r\n            post.Images[0] && <PostImages images={post.Images}></PostImages>\r\n          }\r\n          actions={[\r\n            <RetweetOutlined key=\"retweet\"></RetweetOutlined>,\r\n            liked ? (\r\n              <HeartTwoTone\r\n                twoToneColor=\"#eb2f96\"\r\n                key=\"heart\"\r\n                onClick={onToggleLike}\r\n              ></HeartTwoTone>\r\n            ) : (\r\n              <HeartOutlined key=\"heart\" onClick={onToggleLike}></HeartOutlined>\r\n            ),\r\n            <MessageOutlined\r\n              key=\"comment\"\r\n              onClick={onToggleComment}\r\n            ></MessageOutlined>,\r\n            <Popover\r\n              key=\"more\"\r\n              content={\r\n                <Button.Group>\r\n                  {id && post.User.id === id ? (\r\n                    <>\r\n                      <Button>수정</Button>\r\n                      <Button type=\"danger\" onClick={deletePost}>\r\n                        삭제\r\n                      </Button>\r\n                    </>\r\n                  ) : (\r\n                    <Button>신고</Button>\r\n                  )}\r\n                </Button.Group>\r\n              }\r\n            >\r\n              <EllipsisOutlined></EllipsisOutlined>\r\n            </Popover>,\r\n          ]}\r\n        >\r\n          <Card.Meta\r\n            avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n            title={post.User.nickname}\r\n            description={\r\n              <PostCardContent postData={post.content}></PostCardContent>\r\n            }\r\n          ></Card.Meta>\r\n        </Card>\r\n        {commentFormOpened && (\r\n          <div>\r\n            <CommentForm post={post}></CommentForm>\r\n            <List\r\n              header={`${post.Comments.length}개의 댓글`}\r\n              itemLayout=\"horizontal\"\r\n              dataSource={post.Comments}\r\n              renderItem={(item) => {\r\n                return (\r\n                  <li>\r\n                    <Comment\r\n                      author={item.User.nickname}\r\n                      avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                      content={item.content}\r\n                    ></Comment>\r\n                  </li>\r\n                );\r\n              }}\r\n            ></List>\r\n          </div>\r\n        )}\r\n        {/* <CommentForm></CommentForm>\r\n        <Comments></Comments> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}