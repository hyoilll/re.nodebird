{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from \"@redux-saga/core/effects\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/addpost\");\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data // 성공결과가 담겨있음\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data // 실패결과가 담겨있음\n\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/api/addcomment\");\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data // 성공결과가 담겨있음\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data // 실패결과가 담겨있음\n\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_POST_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/dlgyd/OneDrive/문서/GitHub/re.nodebird/front/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","data","axios","post","addPost","action","type","result","err","response","addCommentAPI","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,0BAAlD;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,gBAJF,EAKEC,gBALF,QAMO,kBANP;;AAQA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOC,KAAK,CAACC,IAAN,CAAW,cAAX,CAAP;AACD;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAEP,gBADE;AAERE,MAAAA,IAAI,EAAEM,MAAM,CAACN,IAFL,CAEW;;AAFX,KAAD,CAAT;AAID,GAPD,CAOE,OAAOO,GAAP,EAAY;AACZ,UAAMf,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAET,gBADE;AAERI,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR,IAFX,CAEiB;;AAFjB,KAAD,CAAT;AAID;AACF;;AAED,SAASS,aAAT,CAAuBT,IAAvB,EAA6B;AAC3B,SAAOC,KAAK,CAACC,IAAN,CAAW,iBAAX,CAAP;AACD;;AAED,UAAUQ,UAAV,CAAqBN,MAArB,EAA6B;AAC3B,MAAI;AACF;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAEV,mBADE;AAERK,MAAAA,IAAI,EAAEM,MAAM,CAACN,IAFL,CAEW;;AAFX,KAAD,CAAT;AAID,GAPD,CAOE,OAAOO,GAAP,EAAY;AACZ,UAAMf,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAEX,mBADE;AAERM,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR,IAFX,CAEiB;;AAFjB,KAAD,CAAT;AAID;AACF;;AAED,UAAUW,YAAV,GAAyB;AACvB,QAAMlB,UAAU,CAACI,gBAAD,EAAmBM,OAAnB,CAAhB;AACD;;AAED,UAAUS,eAAV,GAA4B;AAC1B,QAAMnB,UAAU,CAACI,gBAAD,EAAmBa,UAAnB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMxB,GAAG,CAAC,CAACE,IAAI,CAACoB,YAAD,CAAL,EAAqBpB,IAAI,CAACqB,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import { all, delay, fork, put, takeLatest } from \"@redux-saga/core/effects\";\r\nimport {\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n} from \"../reducers/post\";\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/api/addpost\");\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data, // 성공결과가 담겨있음\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data, // 실패결과가 담겨있음\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(\"/api/addcomment\");\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    // const result = yield call(addCommentAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data, // 성공결과가 담겨있음\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data, // 실패결과가 담겨있음\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_POST_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}