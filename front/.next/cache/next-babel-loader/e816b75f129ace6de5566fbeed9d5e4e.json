{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlgyd\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\re.nodebird\\\\front\\\\components\\\\PostCard.js\";\nimport { Button, Card, Popover, Avatar } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, EllipsisOutlined, MessageOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nimport React, { useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormopened\n  } = useState(false);\n  const onToggleComment = useCallback(() => {\n    setCommentFormopened(prev => !prev);\n  }, []);\n  const me = useSelector(state => state.user.me);\n  const id = me && me.id; // me가 있으면 id가 들어가고 없으면 undefined가 저장됨\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        cover: post && post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 31\n        }, this),\n        actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n          twoToneColor: \"#eb2f96\",\n          onClick: onToggleLike\n        }, \"heart\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n          onClick: onToggleLike\n        }, \"heart\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n          onClick: onToggleComment\n        }, \"comment\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          content: /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                children: \"\\uC218\\uC815\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"danger\",\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC2E0\\uACE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, \"more\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)],\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: post.User.nickname[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this),\n          title: post.User.nickname,\n          description: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/dlgyd/OneDrive/문서/GitHub/re.nodebird/front/components/PostCard.js"],"names":["Button","Card","Popover","Avatar","RetweetOutlined","HeartOutlined","EllipsisOutlined","MessageOutlined","useSelector","PropTypes","PostImages","React","useCallback","useState","PostCard","post","liked","setLiked","onToggleLike","prev","commentFormOpened","setCommentFormopened","onToggleComment","me","state","user","id","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { Button, Card, Popover, Avatar } from \"antd\";\r\nimport {\r\n  RetweetOutlined,\r\n  HeartOutlined,\r\n  EllipsisOutlined,\r\n  MessageOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport PostImages from \"./PostImages\";\r\nimport React, { useCallback, useState } from \"react\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n\r\n  const [commentFormOpened, setCommentFormopened] = useState(false);\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormopened((prev) => !prev);\r\n  }, []);\r\n\r\n  const me = useSelector((state) => state.user.me);\r\n  const id = me && me.id; // me가 있으면 id가 들어가고 없으면 undefined가 저장됨\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: 20 }}>\r\n        <Card\r\n          cover={\r\n            post &&\r\n            post.Images[0] && <PostImages images={post.Images}></PostImages>\r\n          }\r\n          actions={[\r\n            <RetweetOutlined key=\"retweet\"></RetweetOutlined>,\r\n            liked ? (\r\n              <HeartTwoTone\r\n                twoToneColor=\"#eb2f96\"\r\n                key=\"heart\"\r\n                onClick={onToggleLike}\r\n              ></HeartTwoTone>\r\n            ) : (\r\n              <HeartOutlined key=\"heart\" onClick={onToggleLike}></HeartOutlined>\r\n            ),\r\n            <MessageOutlined\r\n              key=\"comment\"\r\n              onClick={onToggleComment}\r\n            ></MessageOutlined>,\r\n            <Popover\r\n              key=\"more\"\r\n              content={\r\n                <Button.Group>\r\n                  {id && post.User.id === id ? (\r\n                    <>\r\n                      <Button>수정</Button>\r\n                      <Button type=\"danger\">삭제</Button>\r\n                    </>\r\n                  ) : (\r\n                    <Button>신고</Button>\r\n                  )}\r\n                </Button.Group>\r\n              }\r\n            >\r\n              <EllipsisOutlined></EllipsisOutlined>\r\n            </Popover>,\r\n          ]}\r\n        >\r\n          <Card.Meta\r\n            avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n            title={post.User.nickname}\r\n            description={post.content}\r\n          ></Card.Meta>\r\n        </Card>\r\n        {commentFormOpened && <div>comment</div>}\r\n        {/* <CommentForm></CommentForm>\r\n        <Comments></Comments> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}