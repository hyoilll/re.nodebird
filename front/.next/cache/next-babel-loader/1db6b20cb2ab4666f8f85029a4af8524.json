{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport produce from \"immer\";\nexport var initialState = {\n  logInLoading: false,\n  // 로그인 시도중인지 확인하는 변수\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중인지 확인하는 변수\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입중인지 확인하는 변수\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중인지 확인하는 변수\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  followLoading: false,\n  // follow 시도중인지 확인하는 변수\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // unfollow 시도중인지 확인하는 변수\n  unfollowDone: false,\n  unfollowError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n}; // --- 상수화\n\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport var CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport var CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport var FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport var FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport var FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport var UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport var UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport var UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\"; // user reducer의 상태를 바꿀 수 있는 액션\n\nexport var ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport var REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\"; // ---\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: \"hyoil\",\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: \"aaa\"\n    }, {\n      nickname: \"bbb\"\n    }, {\n      nickname: \"ccc\"\n    }],\n    Followers: [{\n      nickname: \"aaa\"\n    }, {\n      nickname: \"bbb\"\n    }, {\n      nickname: \"ccc\"\n    }]\n  });\n};\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followDone = false;\n        draft.followError = null;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true;\n        draft.me.Followings.push({\n          id: action.data\n        });\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      case UNFOLLOW_REQUEST:\n        draft.unfollowLoading = true;\n        draft.unfollowDone = false;\n        draft.unfollowError = null;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        draft.unfollowLoading = false;\n        draft.unfollowDone = true;\n        break;\n\n      case UNFOLLOW_FAILURE:\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n\n      case LOG_IN_REQUEST:\n        // 리듀서의 액션이 실행되면서 saga의 액션도 같이 실행이됨 동시에\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n      // return {\n      //   // request에서 3개의 변수를 모두 초기화 시켜줌\n      //   ...state,\n      //   logInLoading: true,\n      //   logInDone: false,\n      //   logInError: null,\n      // };\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n      // return {\n      //   // success에서 필요한 변수만 초기화 시켜줌\n      //   ...state,\n      //   logInLoading: false,\n      //   logInDone: true,\n      //   me: dummyUser(action.data),\n      // };\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n      // return {\n      //   // failure에서 필요한 변수만 초기화 시켜줌\n      //   ...state,\n      //   logInLoading: false,\n      //   logInError: action.error,\n      // };\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n      // return {\n      //   ...state,\n      //   logOutLoading: true,\n      //   logOutDone: false,\n      //   logOutError: null,\n      // };\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.logInDone = false;\n        draft.me = null;\n        break;\n      // return {\n      //   ...state,\n      //   logOutLoading: false,\n      //   logOutDone: true,\n      //   logInDone: false,\n      //   me: null,\n      // };\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n      // return {\n      //   ...state,\n      //   logOutLoading: false,\n      //   logOutError: action.error,\n      // };\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n      // return {\n      //   ...state,\n      //   signUpLoading: true,\n      //   signUpDone: false,\n      //   signUpError: null,\n      // };\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n      // return {\n      //   ...state,\n      //   signUpLoading: false,\n      //   signUpDone: true,\n      // };\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n      // return {\n      //   ...state,\n      //   signUpLoading: false,\n      //   signUpError: action.error,\n      // };\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n      // return {\n      //   ...state,\n      //   changeNicknameLoading: true,\n      //   changeNicknameDone: false,\n      //   changeNicknameError: null,\n      // };\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n      // return {\n      //   ...state,\n      //   changeNicknameLoading: false,\n      //   changeNicknameDone: true,\n      // };\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n      // return {\n      //   ...state,\n      //   changeNicknameLoading: false,\n      //   changeNicknameError: action.error,\n      // };\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: [{ id: action.data }, ...state.me.Posts],\n      //   },\n      // };\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n      // const postIndex = state.me.Posts.findIndex((v) => v.id === action.data);\n      // const posts = [...state.me.Posts];\n      // posts.splice(postIndex, 1);\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\n      //   },\n      // };\n\n      default:\n        break;\n      // return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/dlgyd/OneDrive/문서/GitHub/re.nodebird/front/reducers/user.js"],"names":["produce","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","draft","push","error","unshift","filter","v"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  logInLoading: false, // 로그인 시도중인지 확인하는 변수\r\n  logInDone: false,\r\n  logInError: null,\r\n\r\n  logOutLoading: false, // 로그아웃 시도중인지 확인하는 변수\r\n  logOutDone: false,\r\n  logOutError: null,\r\n\r\n  signUpLoading: false, // 회원가입중인지 확인하는 변수\r\n  signUpDone: false,\r\n  signUpError: null,\r\n\r\n  changeNicknameLoading: false, // 닉네임 변경 시도중인지 확인하는 변수\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n\r\n  followLoading: false, // follow 시도중인지 확인하는 변수\r\n  followDone: false,\r\n  followError: null,\r\n\r\n  unfollowLoading: false, // unfollow 시도중인지 확인하는 변수\r\n  unfollowDone: false,\r\n  unfollowError: null,\r\n\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\n// --- 상수화\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\r\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\r\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\r\n\r\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\r\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\r\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\r\n\r\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\r\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\r\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\r\n\r\n// user reducer의 상태를 바꿀 수 있는 액션\r\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\r\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\r\n// ---\r\n\r\nconst dummyUser = (data) => {\r\n  return {\r\n    ...data,\r\n    nickname: \"hyoil\",\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ nickname: \"aaa\" }, { nickname: \"bbb\" }, { nickname: \"ccc\" }],\r\n    Followers: [{ nickname: \"aaa\" }, { nickname: \"bbb\" }, { nickname: \"ccc\" }],\r\n  };\r\n};\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case FOLLOW_REQUEST:\r\n        draft.followLoading = true;\r\n        draft.followDone = false;\r\n        draft.followError = null;\r\n        break;\r\n      case FOLLOW_SUCCESS:\r\n        draft.followLoading = false;\r\n        draft.followDone = true;\r\n        draft.me.Followings.push({ id: action.data });\r\n        break;\r\n      case FOLLOW_FAILURE:\r\n        draft.followLoading = false;\r\n        draft.followError = action.error;\r\n        break;\r\n\r\n      case UNFOLLOW_REQUEST:\r\n        draft.unfollowLoading = true;\r\n        draft.unfollowDone = false;\r\n        draft.unfollowError = null;\r\n        break;\r\n      case UNFOLLOW_SUCCESS:\r\n        draft.unfollowLoading = false;\r\n        draft.unfollowDone = true;\r\n        break;\r\n      case UNFOLLOW_FAILURE:\r\n        draft.unfollowLoading = false;\r\n        draft.unfollowError = action.error;\r\n        break;\r\n\r\n      case LOG_IN_REQUEST: // 리듀서의 액션이 실행되면서 saga의 액션도 같이 실행이됨 동시에\r\n        draft.logInLoading = true;\r\n        draft.logInDone = false;\r\n        draft.logInError = null;\r\n        break;\r\n      // return {\r\n      //   // request에서 3개의 변수를 모두 초기화 시켜줌\r\n      //   ...state,\r\n      //   logInLoading: true,\r\n      //   logInDone: false,\r\n      //   logInError: null,\r\n      // };\r\n      case LOG_IN_SUCCESS:\r\n        draft.logInLoading = false;\r\n        draft.logInDone = true;\r\n        draft.me = dummyUser(action.data);\r\n        break;\r\n      // return {\r\n      //   // success에서 필요한 변수만 초기화 시켜줌\r\n      //   ...state,\r\n      //   logInLoading: false,\r\n      //   logInDone: true,\r\n      //   me: dummyUser(action.data),\r\n      // };\r\n      case LOG_IN_FAILURE:\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n      // return {\r\n      //   // failure에서 필요한 변수만 초기화 시켜줌\r\n      //   ...state,\r\n      //   logInLoading: false,\r\n      //   logInError: action.error,\r\n      // };\r\n\r\n      case LOG_OUT_REQUEST:\r\n        draft.logOutLoading = true;\r\n        draft.logOutDone = false;\r\n        draft.logOutError = null;\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   logOutLoading: true,\r\n      //   logOutDone: false,\r\n      //   logOutError: null,\r\n      // };\r\n      case LOG_OUT_SUCCESS:\r\n        draft.logOutLoading = false;\r\n        draft.logOutDone = true;\r\n        draft.logInDone = false;\r\n        draft.me = null;\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   logOutLoading: false,\r\n      //   logOutDone: true,\r\n      //   logInDone: false,\r\n      //   me: null,\r\n      // };\r\n      case LOG_OUT_FAILURE:\r\n        draft.logOutLoading = false;\r\n        draft.logOutError = action.error;\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   logOutLoading: false,\r\n      //   logOutError: action.error,\r\n      // };\r\n\r\n      case SIGN_UP_REQUEST:\r\n        draft.signUpLoading = true;\r\n        draft.signUpDone = false;\r\n        draft.signUpError = null;\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   signUpLoading: true,\r\n      //   signUpDone: false,\r\n      //   signUpError: null,\r\n      // };\r\n      case SIGN_UP_SUCCESS:\r\n        draft.signUpLoading = false;\r\n        draft.signUpDone = true;\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   signUpLoading: false,\r\n      //   signUpDone: true,\r\n      // };\r\n      case SIGN_UP_FAILURE:\r\n        draft.signUpLoading = false;\r\n        draft.signUpError = action.error;\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   signUpLoading: false,\r\n      //   signUpError: action.error,\r\n      // };\r\n\r\n      case CHANGE_NICKNAME_REQUEST:\r\n        draft.changeNicknameLoading = true;\r\n        draft.changeNicknameDone = false;\r\n        draft.changeNicknameError = null;\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   changeNicknameLoading: true,\r\n      //   changeNicknameDone: false,\r\n      //   changeNicknameError: null,\r\n      // };\r\n      case CHANGE_NICKNAME_SUCCESS:\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameDone = true;\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   changeNicknameLoading: false,\r\n      //   changeNicknameDone: true,\r\n      // };\r\n      case CHANGE_NICKNAME_FAILURE:\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameError = action.error;\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   changeNicknameLoading: false,\r\n      //   changeNicknameError: action.error,\r\n      // };\r\n\r\n      case ADD_POST_TO_ME:\r\n        draft.me.Posts.unshift({ id: action.data });\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   me: {\r\n      //     ...state.me,\r\n      //     Posts: [{ id: action.data }, ...state.me.Posts],\r\n      //   },\r\n      // };\r\n\r\n      case REMOVE_POST_OF_ME:\r\n        draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n        break;\r\n      // const postIndex = state.me.Posts.findIndex((v) => v.id === action.data);\r\n      // const posts = [...state.me.Posts];\r\n      // posts.splice(postIndex, 1);\r\n      // return {\r\n      //   ...state,\r\n      //   me: {\r\n      //     ...state.me,\r\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n      //   },\r\n      // };\r\n      default:\r\n        break;\r\n      // return state;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}