{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlgyd\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\re.nodebird\\\\front\\\\components\\\\PostForm.js\";\nimport { Button, Form, Input } from \"antd\";\nimport { useCallback, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  const imagePaths = useSelector(state => state.post.imagePaths);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost);\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        margin: \"10px 0 20px\"\n      },\n      encType: \"multipart/form-data\",\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: text,\n        onChange: onChangeText,\n        maxLength: 140,\n        placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          hidden: true,\n          ref: imageInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClickImageUpload,\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          style: {\n            float: \"right\"\n          },\n          htmlType: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: imagePaths.map(v => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline-block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: v,\n              style: {\n                width: \"200px\"\n              },\n              alt: v\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: \"\\uC81C\\uAC70\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, v, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/dlgyd/OneDrive/문서/GitHub/re.nodebird/front/components/PostForm.js"],"names":["Button","Form","Input","useCallback","useState","useRef","useDispatch","useSelector","addPost","PostForm","imagePaths","state","post","dispatch","imageInput","text","setText","onChangeText","e","target","value","onSubmit","onClickImageUpload","current","click","margin","float","map","v","display","width"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,MAAhC,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,OAAT,QAAwB,kBAAxB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,UAAU,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,UAAvB,CAA9B;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,UAAU,GAAGT,MAAM,EAAzB;AAEA,QAAM;AAAA,OAACU,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMa,YAAY,GAAGd,WAAW,CAAEe,CAAD,IAAO;AACtCF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,QAAMC,QAAQ,GAAGlB,WAAW,CAAC,MAAM;AACjCU,IAAAA,QAAQ,CAACL,OAAD,CAAR;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAIA,QAAMc,kBAAkB,GAAGnB,WAAW,CAAC,MAAM;AAC3CW,IAAAA,UAAU,CAACS,OAAX,CAAmBC,KAAnB;AACD,GAFqC,EAEnC,EAFmC,CAAtC;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADT;AAEE,MAAA,OAAO,EAAC,qBAFV;AAGE,MAAA,QAAQ,EAAEJ,QAHZ;AAAA,8BAKE,QAAC,KAAD,CAAO,QAAP;AACE,QAAA,KAAK,EAAEN,IADT;AAEE,QAAA,QAAQ,EAAEE,YAFZ;AAGE,QAAA,SAAS,EAAE,GAHb;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cALF,eAWE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,MAA3B;AAA4B,UAAA,MAAM,MAAlC;AAAmC,UAAA,GAAG,EAAEH;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEQ,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAA9B;AAAkD,UAAA,QAAQ,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAkBE;AAAA,kBACGhB,UAAU,CAACiB,GAAX,CAAgBC,CAAD,IAAO;AACrB,8BACE;AAAa,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAApB;AAAA,oCACE;AAAK,cAAA,GAAG,EAAED,CAAV;AAAa,cAAA,KAAK,EAAE;AAAEE,gBAAAA,KAAK,EAAE;AAAT,eAApB;AAAwC,cAAA,GAAG,EAAEF;AAA7C;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,aAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATA;AADH;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmCD,CArDD;;AAuDA,eAAenB,QAAf","sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport { useCallback, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { addPost } from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n  const imagePaths = useSelector((state) => state.post.imagePaths);\r\n  const dispatch = useDispatch();\r\n  const imageInput = useRef();\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const onChangeText = useCallback((e) => {\r\n    setText(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(addPost);\r\n  }, []);\r\n\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        style={{ margin: \"10px 0 20px\" }}\r\n        encType=\"multipart/form-data\"\r\n        onFinish={onSubmit}\r\n      >\r\n        <Input.TextArea\r\n          value={text}\r\n          onChange={onChangeText}\r\n          maxLength={140}\r\n          placeholder=\"어떤 신기한 일이 있었나요?\"\r\n        ></Input.TextArea>\r\n        <div>\r\n          <input type=\"file\" multiple hidden ref={imageInput}></input>\r\n          <Button onClick={onClickImageUpload}>Upload Image</Button>\r\n          <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\r\n            Upload\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          {imagePaths.map((v) => {\r\n            return (\r\n              <div key={v} style={{ display: \"inline-block\" }}>\r\n                <img src={v} style={{ width: \"200px\" }} alt={v}></img>\r\n                <div>\r\n                  <Button>제거</Button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}