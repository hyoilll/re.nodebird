{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlgyd\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\re.nodebird\\\\front\\\\components\\\\PostForm.js\";\nimport { Button, Form, Input } from \"antd\";\nimport { useCallback, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { addPost } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const imageInput = useRef();\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput(\"\");\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, []);\n  useEffect(() => {\n    // componentDidMount -> 첫 랜더링시 아래의 조건문이 실행됨. and componentDidUpdate에 의해 리랜더링\n    if (addPostDone) {\n      setText(\"\");\n    } // componentDidUpdate역할을 하는 배열 매개변수 addPostDone의 state의 변화가 생기면 리랜더링됨\n\n  }, [addPostDone]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        margin: \"10px 0 20px\"\n      },\n      encType: \"multipart/form-data\",\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: text,\n        onChange: onChangeText,\n        maxLength: 140,\n        placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          hidden: true,\n          ref: imageInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClickImageUpload,\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          style: {\n            float: \"right\"\n          },\n          htmlType: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: imagePaths.map(v => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline-block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: v,\n              style: {\n                width: \"200px\"\n              },\n              alt: v\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: \"\\uC81C\\uAC70\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, v, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/dlgyd/OneDrive/문서/GitHub/re.nodebird/front/components/PostForm.js"],"names":["Button","Form","Input","useCallback","useRef","useEffect","useDispatch","useSelector","useInput","addPost","PostForm","imagePaths","addPostDone","state","post","imageInput","dispatch","text","onChangeText","setText","onSubmit","onClickImageUpload","current","click","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport { useCallback, useRef, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nimport { addPost } from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n  const imageInput = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(addPost(text));\r\n  }, [text]);\r\n\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // componentDidMount -> 첫 랜더링시 아래의 조건문이 실행됨. and componentDidUpdate에 의해 리랜더링\r\n    if (addPostDone) {\r\n      setText(\"\");\r\n    }\r\n    // componentDidUpdate역할을 하는 배열 매개변수 addPostDone의 state의 변화가 생기면 리랜더링됨\r\n  }, [addPostDone]);\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        style={{ margin: \"10px 0 20px\" }}\r\n        encType=\"multipart/form-data\"\r\n        onFinish={onSubmit}\r\n      >\r\n        <Input.TextArea\r\n          value={text}\r\n          onChange={onChangeText}\r\n          maxLength={140}\r\n          placeholder=\"어떤 신기한 일이 있었나요?\"\r\n        ></Input.TextArea>\r\n        <div>\r\n          <input type=\"file\" multiple hidden ref={imageInput}></input>\r\n          <Button onClick={onClickImageUpload}>Upload Image</Button>\r\n          <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\r\n            Upload\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          {imagePaths.map((v) => {\r\n            return (\r\n              <div key={v} style={{ display: \"inline-block\" }}>\r\n                <img src={v} style={{ width: \"200px\" }} alt={v}></img>\r\n                <div>\r\n                  <Button>제거</Button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}